#######################
#### Start of File ####
#######################
# --------------------------------------------------------------- 
# Makefile Contents:  Common settings for Windows console applications

# --------------------------------------------------------------- 
!IF "$(FINAL)" == ""
FINAL = 1 # Default to release configuration
!ENDIF

!IF "$(FINAL)" == "1"
NODEBUG = 1 # No debugging information
BUILD=release
!ENDIF

# Setup my path to the DataReel library
DATAREEL_DIR = ../../fcrypt/3plibs/datareel
GCODE_LIB_DIR = $(DATAREEL_DIR) 
DATAREEL_PATH = ../../fcrypt/3plibs/datareel
DATAREEL_SRC_PATH = $(DATAREEL_PATH)/src/
DATAREEL_INCLUDE_PATH = $(DATAREEL_PATH)/include/

# Setup path to ZLIB
ZCODE_DIR = ../../../../3plibs/zlib32-1.3.1

# Setup path to OPENSSL library
OPENSSL_DIR = ../../../../3plibs/openssl32

ZCODE_INCLUDE_PATH = $(ZCODE_DIR)
OPENSSL_INCLUDE_PATH = $(OPENSSL_DIR)/include

FCRYPT_PATH = ../../fcrypt
FCRYPT_SRC_PATH = $(FCRYPT_PATH)/src/
FCRYPT_INCLUDE_PATH = $(FCRYPT_PATH)/include/

# Define file extensions and path variables
OBJ_EXT = .obj
EXE_EXT = .exe 
LIB_EXT = .lib
SHAREDLIB_EXT = .dll
PATHSEP = /

ADD_INC_PATHS = -I$(DATAREEL_INCLUDE_PATH) -I$(ZCODE_INCLUDE_PATH) \
-I$(OPENSSL_INCLUDE_PATH) -I$(FCRYPT_INCLUDE_PATH) -I../include -I../src -I../../include

!IF "$(FINAL)" == "1"
DEBUG_DEFMACS = # No debugging information
!ELSE
DEBUG_DEFMACS = -D__MSVC_DEBUG__ -D__APP_DEBUG_VERSION__
# MSVC Leak test debug flags. NOTE: Also requires /MDd or /MTd compiler flag.
# -D__MSVC_DEBUG__
# Debug flags used to disable platform interoperable data types
# -D__USE_NATIVE_INT_TYPES__   
# -D__USE_NATIVE_FLOAT_TYPES__
!ENDIF

64BIT_DEFMACS = -D__64_BIT_DATABASE_ENGINE__
ANSI_DEFMACS = -D__USE_ANSI_CPP__
BTREE_DEFMACS = -D__USE_BINARY_SEARCH__ -D__USE_SINGLE_COMPARE__
COMPILER_DEFMACS =  -D__VS2026__ # Visual Studio 2026 # -D__MSDEVNET__ # Microsoft Visual C++ .NET
CPP_DEFMACS = -D__USE_CPP_IOSTREAM__
DATABASE_DEFMACS = -D__USE_DATABASE_CACHE__ -D__USE_BTREE_CACHE__
DEVCACHE_DEFMACS =  -D__VMEMORY_BUFFER__ # -D__SMEMORY_BLOCK__
FILESYS_DEFMACS = -D__NTFS__
DISPLAY_DEFMACS = -D __wxWIN302__ -D__wxWINALL__ # -D__CONSOLE__ #-D__CURSES__ #-D__wxWIN201__ #-D__wxWIN168B__
#TESTCODE_DEFMACS = -D__USE_CRC32_TABLE_FUNCTIONS__ -D__USE_EDS_TEST_FUNCTIONS__
PS_DEFMACS = -D__USE_POSTSCRIPT_PRINTING__ 
HTM_DEFMACS = -D__USE_HTM_PRINTING__ 
TXT_DEFMACS = -D__USE_TEXT_PRINTING__
THREAD_DEFMACS = -D__GUI_THREAD_SAFE__
UNICODE_DEMACS = -D__HAS_UNICODE__
#TERMIO_DEFMACS = -D__USE_TERMINAL_IO__

# GUI specific macros
# NOTE: Define these macros in the project makefile
#BETA_DEFMACS = -D__BETA_VERSION__
#DEMO_DEFAMCS = -D__DEMO_VERSION__ 
CLIPBOARD_DEFMACS = -D__USE_CLIPBOARD_FUNCTIONS__
HELP_DEFMACS = -D__USE_ONLINE_HELP__
MSW_PRINTING_DEFMACS = -D__USE_MSW_PRINTING__
#TEXT_PRINTING_DEFMACS = -D__USE_TEXT_PRINTING__ # -D__USE_APP_TEXT_PRINTING__ 
#POSTSCRIPT_DEFMACS = -D__USE_POSTSCRIPT_PRINTING__
#HTML_PRINTING_DEFMACS = -D__USE_HTM_PRINTING__

# Smartcard specific macros
SMARTCARD_DEMACS = -D__DISABLE_SMART_CARD__
#SMARTCARD_DEMACS = -D__ENABLE_SMART_CARD__

OPENSSL_DEFMACS =
ZLIB_DEFMACS = 
#COMPRESS_DEFMACS = -D__COMPRESSION_OFF__
#DEMO_DEFAMCS = -D__DEMO_VERSION__

# Testing only
#TEST_DEFMACS = -D__COMPILE_DATE_TIME__

# Define macros specific to this buid
DEFMACS = -D__WIN32__ -D__X86__ -D__MSVC__ -D__HAS__BEGINTHREADEX__ \
$(COMPILER_DEFMACS) $(64BIT_DEFMACS) $(ANSI_DEFMACS) \
$(BTREE_DEFMACS) $(CPP_DEFMACS) $(DEBUG_DEFMACS) $(DEVCACHE_DEFMACS) \
$(DISPLAY_DEFMACS) $(FILESYS_DEFMACS) $(TESTCODE_DEFMACS) \
$(PS_DEFMACS) $(HTM_DEFMACS) $(TXT_DEFMACS) \
$(DATABASE_DEFMACS) $(UNICODE_DEMACS) $(TERMIO_DEFMACS) \
$(APP_DEBUG_DEFMACS) $(BETA_DEFMACS) $(CLIPBOARD_DEFMACS) \
$(DEMO_DEFAMCS) $(HELP_DEFMACS) $(HTML_PRINTING_DEFMACS) \
$(MSW_PRINTING_DEFMACS) $(POSTSCRIPT_DEFMACS) $(TEXT_PRINTING_DEFMACS) \
$(THREAD_DEFMACS) -D__ENABLE_64_BIT_INTEGERS__ \
$(COMPRESS_DEFMACS) $(OPENSSL_DEFMACS) $(ZLIB_DEFMACS) \
$(SMARTCARD_DEMACS) 

# Define macros for compiler and linker
AC = cl # ANSI c compiler
CC = cl
CPP = cl
LINKER = link
LIBUTIL = LIB

# Resource compiler for MSVC
RC = rc

# wxWindow configurations 
# Set path to wxWidgets library here
WXDIR = ../../../../3plibs/wxWidgets32-3.2.4
WXWIN = $(WXDIR)

!IF "$(FINAL)" == "1"
WX2_DEFMACS = /DWIN32 /DNDEBUG /D_CRT_SECURE_NO_DEPRECATE=1 /D_CRT_NON_CONFORMING_SWPRINTFS=1 \
/D_SCL_SECURE_NO_WARNINGS=1 /D__NO_VC_CRTDBG_ /DTARGET_CPU_COMPFLAG=0 /D__WXMSW_ /D_WINDOWS /DNOPCH /D_UNICODE /DNDEBUG
!ELSE
WX2_DEFMACS = /DWIN32 /D_DEBUG /D_CRT_SECURE_NO_DEPRECATE=1 /D_CRT_NON_CONFORMING_SWPRINTFS=1 \
/D_SCL_SECURE_NO_WARNINGS=1 /DTARGET_CPU_COMPFLAG=0 /D__WXMSW_ /D_WINDOWS /DNOPCH /D_UNICODE
!ENDIF


!IF "$(FINAL)" == "1"
WX2_INCPATH = -I$(WXWIN)$(PATHSEP)include \
-I$(WXWIN)$(PATHSEP)include$(PATHSEP)msvc \
-I$(WXWIN)$(PATHSEP)lib$(PATHSEP)vc_lib$(PATHSEP)mswu
!ELSE
WX2_INCPATH = -I$(WXWIN)$(PATHSEP)include \
-I$(WXWIN)$(PATHSEP)include$(PATHSEP)msvc \
-I$(WXWIN)$(PATHSEP)lib$(PATHSEP)vc_lib$(PATHSEP)mswud
!ENDIF

WX2_LIBPATH = /libpath:"$(WXWIN)$(PATHSEP)lib" \
/libpath:"$(WXWIN)$(PATHSEP)lib$(PATHSEP)vc_lib"

GUI_LIBS = comctl32.lib rpcrt4.lib winmm.lib

!IF "$(FINAL)" == "1"
WXLIB = wxbase32u.lib wxmsw32u_gl.lib wxmsw32u_webview.lib \
wxbase32u_net.lib wxmsw32u_html.lib wxmsw32u_xrc.lib \
wxbase32u_xml.lib wxmsw32u_media.lib wxpng.lib \
wxexpat.lib wxmsw32u_propgrid.lib wxregexu.lib \
wxjpeg.lib wxmsw32u_qa.lib wxscintilla.lib \
wxmsw32u_adv.lib wxmsw32u_ribbon.lib wxtiff.lib \
wxmsw32u_aui.lib wxmsw32u_richtext.lib wxzlib.lib \
wxmsw32u_core.lib wxmsw32u_stc.lib
!ELSE
WXLIB = wxbase32ud.lib wxmsw32ud_gl.lib wxmsw32ud_webview.lib \
wxbase32ud_net.lib wxmsw32ud_html.lib wxmsw32ud_xrc.lib \
wxbase32ud_xml.lib wxmsw32ud_media.lib wxpngd.lib \
wxexpatd.lib wxmsw32ud_propgrid.lib wxregexud.lib \
wxjpegd.lib wxmsw32ud_qa.lib wxscintillad.lib \
wxmsw32ud_adv.lib wxmsw32ud_ribbon.lib  wxtiffd.lib \
wxmsw32ud_aui.lib wxmsw32ud_richtext.lib wxzlibd.lib \
wxmsw32ud_core.lib wxmsw32ud_stc.lib
!ENDIF

!IF "$(FINAL)" == "1"
COMPILE_FLAGS = /nologo /TP /MD /Zi /O2 /W4 /GR /EHsc \
$(ADD_INC_PATHS) $(DEFMACS) $(WX2_DEFMACS) $(WX2_INCPATH)
LINKER_FLAGS = /nologo /incremental:no /NODEFAULTLIB:library $(WX2_LIBPATH) 
!ELSE
COMPILE_FLAGS = /nologo /TP /MDd /Od /W4 /GR /EHsc \
$(ADD_INC_PATHS) $(DEFMACS) $(WX2_DEFMACS) $(WX2_INCPATH)
LINKER_FLAGS = /nologo /incremental:no /NODEFAULTLIB:library /DEBUG $(WX2_LIBPATH) 
!ENDIF

COMPILE_ONLY = /c

LINK_LIBRARIES = kernel32.lib user32.lib gdi32.lib comdlg32.lib winspool.lib \
winmm.lib shell32.lib shlwapi.lib comctl32.lib ole32.lib oleaut32.lib uuid.lib \
rpcrt4.lib advapi32.lib version.lib ws2_32.lib wininet.lib wsock32.lib \
$(GUI_LIBS) $(WXLIB) 

# Additional libraries
LIBRARIES = setargv.obj crypt32.lib \
$(OPENSSL_DIR)$(PATHSEP)lib$(PATHSEP)libssl.lib \
$(OPENSSL_DIR)$(PATHSEP)lib$(PATHSEP)libcrypto.lib \
$(ZCODE_DIR)$(PATHSEP)zlib.lib

# --------------------------------------------------------------- 
#####################
#### End of File ####
#####################
